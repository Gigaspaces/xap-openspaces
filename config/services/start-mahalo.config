import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.config.ConfigUtil;
import org.jini.rio.boot.BootUtil;

com.sun.jini.start 
{
    private static policy = "${com.gs.home}${/}policy${/}policy.all";
    
    /* Set up Http Daemon attributes */
    private static codebasePort = BootUtil.getAnonymousPort();
    private static httpdClasspath = "${com.gs.home}${/}lib${/}JSpaces.jar";
    /* Http Daemon set to serve the com.gs.home/lib and com.gs.home/lib/jini root directories */
    private static gsLibPath 	= "${com.gs.home}${/}lib";
    private static jiniLibPath 	= "${com.gs.home}${/}lib${/}jini";
    /* Set up Rio Webster attributes [HTTP Daemon] */
    private static webster = "${com.gs.home}${/}lib${/}rio${/}webster.jar";

    /* Set up Jini Transaction Manager attributes */
    private static mahaloCodebase = BootUtil.getCodebase(new String[] {
                                                           "mahalo-dl.jar",
                                                           "jsk-dl.jar" }
                                                           , codebasePort);

    private static mahaloClasspath = BootUtil.getClasspath(new String[] {
                                                           "${com.gs.home}${/}lib${/}jini${/}mahalo.jar",
                                                           "${com.gs.home}${/}lib${/}jini${/}jsk-lib.jar" } );

    private static mahaloConfig  = "${com.gs.home}${/}config${/}services${/}mahalo.config";
   
    static serviceDescriptors = new ServiceDescriptor[] 
    {
   		/* Rio Webster [HTTP Daemon], set to serve up com.gs.home/lib and com.gs.home/lib/jini directories */
        new NonActivatableServiceDescriptor("",
                                            policy,
                                            webster,                                            
                                            "org.jini.rio.tools.webster.Webster",
                                            new String[]{
                                                "-port", codebasePort, 
                                                "-roots",
                                                ConfigUtil.concat(new Object[] 
                                                {
												  gsLibPath,
												  ";",
												  jiniLibPath
												})
                                            }),


	    /* Jini Transaction Manager - Mahalo */
	    new NonActivatableServiceDescriptor(mahaloCodebase, 
					    policy, 
					    mahaloClasspath,
					    "com.sun.jini.mahalo.TransientMahaloImpl",
					    new String[] {mahaloConfig} )
					    
		};
}