# =============================================================================
# GigaSpaces CacheLoad/CacheStore configuration for overriding space-schema and
# cluster-wide properties. For usage semantics, please refer to gs.properties.
#
# Note: Commented out Properties below, hold the default value.
#
# 		Otherwise, these are necessary overriding properties, divided into:
#			@Mutable - are given to alteration.
#			@Immutable - unalterable.
#
# Usage:
#		append cacheloader to Space URL
#		e.g. "/./mySpace?schema=persistent&properties=cacheloader"
# =============================================================================


# CacheLoader/CacheStore interfaces require an implementing class.
# GigaSpaces provides one implementation that works seamlessly with Hibernate,
# which is defined as follows:
# @Mutable
space-config.persistent.CacheLoaderClass=com.gigaspaces.hibernate.HibernateCacheStoreImpl

# GigaSpaces hibernate implementation, by default, relies on the classpath for the
# location of the hibernate.cfg.xml (hibernates' configuration file).
# For specifying a different location, set its path in the following URL: 
# @Mutable
space-config.persistent.StorageAdapterURL=

# When working with Map API, obtained via CacheFinder.find(<url>) the entity-class
# mapping between key to table-name needs to be defined.
#space-config.persistent.entity-class=<package.classname>

# StorageAdapter properties
# @Immutable
space-config.persistent.enabled=true
# @Immutable
space-config.persistent.StorageAdapterClass=com.j_spaces.sadapter.cache.CacheAdapter
#space-config.engine.cache_size=100000

# local-cache and Map-API support
# Version is set to false, unless your CacheLoader/Store implementation can map
# between GigaSpaces version attribute and the underlying store.
# @Mutable (but note limitation)
space-config.dist-cache.versioned=false

# cluster-wide support
#-Dcom.gs.cluster.cache-loader.external-data-source=false
#-Dcom.gs.cluster.cache-loader.central-data-source=false