############################################################
#  	GigaSpaces Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
#
# For GS logger loader troubleshooting mode please set -Dcom.gs.logging.debug=true
#
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# Default global logging level.
#
# NOTE: THIS ATTRIBUTE IS IGNORED BY GS LOGGING UTILITY!
#
# NOTE: useParentHandlers is always set to false in order
# 		to not use handlers of parent logger
#
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overridden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
# .level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################


###########################################
# FileHandler properties
###########################################

# specifies the default level for the Handler (default to Level.ALL).
 java.util.logging.FileHandler.level = ALL
# specifies the name of a Filter class to use (default to no Filter).
# java.util.logging.FileHandler.filter = no Filter
# specifies the name of a Formatter class to use (default to java.util.logging.XMLFormatter)
java.util.logging.FileHandler.formatter = com.gigaspaces.logger.GSSimpleFormatter
# the name of the character set encoding to use (default to the default platform encoding).
#java.util.logging.FileHandler.encoding =
# specifies an approximate maximum amount to write (in bytes) to any one file.
#If this is zero, then there is no limit. (default to no limit).
java.util.logging.FileHandler.limit = 2000000
# specifies how many output files to cycle through (default to 1).
java.util.logging.FileHandler.count = 3
# specifies whether the FileHandler should append onto any existing files (default to false).
java.util.logging.FileHandler.append = true
# specifies a pattern for generating the output file name. See below for details.
# (default to "../logs/gigaspaces%g_%u.log" - <GSROOT>/logs folder
# or ../logs/gigaspaces_ui_%g_%u.log for the UI application logger).
#	"/" the local pathname separator
#	"%t" the system temporary directory
#	"%h" the value of the "user.home" system property
#	"%g" the generation number to distinguish rotated logs
#	"%u" a unique number to resolve conflicts
#	"%%" translates to a single percent sign "%"
java.util.logging.FileHandler.pattern = ../logs/gigaspaces_%g_%u.log

###########################################
# ConsoleHandler properties
###########################################

# Using ALL level will print all output to console,
#use it for debugging and troubleshooting.
java.util.logging.ConsoleHandler.level = ALL
#java.util.logging.ConsoleHandler.level = OFF
# specifies the name of a Filter class to use (default to no Filter).
# java.util.logging.ConsoleHandler.filter  = no Filter
# specifies the name of a Formatter class to use (default to java.util.logging.SimpleFormatter ).
java.util.logging.ConsoleHandler.formatter = com.gigaspaces.logger.GSSimpleFormatter
# the name of the character set encoding to use (default to the default platform encoding).
#java.util.logging.ConsoleHandler.encoding

############################################################
# com.gigaspaces.logger.GSSimpleFormatter properties
############################################################
# This value is used by GSSimpleFormatter to format messages.
# The numbers define argument serial number to take value from.
# 0 - Date object
# 1 - Class name if available, logger name otherwise.
# 2 - Method name if available, null otherwise.
# 3 - Log Level
# 4 - Logger name
# 5 - Message
# default value is: "{0,date} {0,time}\n{3} [{4}]: {5}\n"
# examples:
#  {0,date} {0,time} Class: {1} Method: {2}\n{3} [{4}]: {5}\n
# For more details about format, please refer to: java.text.MessageFormat
com.gigaspaces.logger.GSSimpleFormatter.format = {0,date} {0,time}\n{3} [{4}]: {5}\n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################


############################################################
# GigaSpaces Loggers
############################################################

# ADMINISTRATIVE
# When the log message's level is SEVERE, the Exception's stack-trace is logged.
# At lower levels, only their toString() is logged.
# To trigger Exception's stack-trace for messages logged with Level.WARNING, set
# the com.gigaspaces.exceptions.level to WARNING
com.gigaspaces.exceptions.level = SEVERE

# MANAGEMENT (GUI, Browser, Cluster View, JMX)
com.gigaspaces.admin.level = INFO
com.gigaspaces.admin.ui.level = INFO
com.gigaspaces.admin.ui.cluster.view.level = INFO
com.gigaspaces.admin.ui.spacebrowser.level = INFO
com.gigaspaces.admin.cli.level = INFO
com.gigaspaces.jmx.level = INFO

# SERVER
com.gigaspaces.cache.level = INFO
com.gigaspaces.filters.level = INFO
com.gigaspaces.lrmi.level = INFO
com.gigaspaces.jca.level = INFO
com.gigaspaces.persistent.level = INFO
com.gigaspaces.jms.level = INFO
com.gigaspaces.kernel.level = CONFIG
com.gigaspaces.worker.multicast.level = INFO
com.gigaspaces.spring.level = INFO
com.gigaspaces.pojo.level = INFO
com.gigaspaces.container.level = INFO
com.gigaspaces.core.common.level = INFO
com.gigaspaces.core.config.level = CONFIG
com.gigaspaces.core.engine.level = INFO
com.gigaspaces.core.lease.level = INFO
com.gigaspaces.core.lookupmanager.level = INFO
com.gigaspaces.core.memorymanager.level = INFO
com.gigaspaces.core.notify.level = INFO
com.gigaspaces.core.fifo.level = INFO
com.gigaspaces.core.cluster.replication.level = INFO
com.gigaspaces.core.cluster.partition.level = INFO
com.gigaspaces.core.cluster.sync_replication.level = INFO
com.gigaspaces.core.cluster.active_election.level = INFO
com.gigaspaces.core.cluster.active_election.infra.level = INFO 

#CLIENT
com.gigaspaces.client.level = INFO

# SpaceURL, SpaceValidator, SpaceURLParser logger
com.gigaspaces.common.spaceurl.level = INFO
# SpaceFinder, CacheFinder related logger
com.gigaspaces.common.spacefinder.level = INFO
# LookupFinder related logger. When a cluster node is not found or when a jini:// SpaceFinder 
# lookup is used.
com.gigaspaces.common.lookupfinder.level = INFO
# ResourceLoader related logger. Set to FINE/FINEST when resources where not loaded
# or when suspect in class loader issues impact the configuration setting.
# resources are space, container, cluster, properties, security etc. configuration and jar files 
com.gigaspaces.common.resourceloader.level = INFO

# ServiceGrid Default Logging
# For more logging components please refer 
# to http://www.gigaspaces.com/wiki/display/GS/GigaSpaces+Logging 
com.gigaspaces.grid.space.SpaceHandler.level = FINE
org.jini.rio.level = INFO
com.gigaspaces.start.level = CONFIG
com.gigaspaces.grid.space.GigaSpacesFaultDetectionHandler.level=INFO
com.gigaspaces.grid.lookup.level = INFO
com.gigaspaces.management.level = INFO
com.gigaspaces.jmx.focalserver.FocalServer.level = INFO

# ServiceGrid GSC Logging
com.gigaspaces.grid.gsc.level = FINE
org.jini.rio.cybernode.level = FINE

# ServiceGrid GSM Logging
org.jini.rio.monitor.level = FINE
org.jini.rio.monitor.feedback.level = INFO
org.jini.rio.monitor.provision.level = INFO

##############################################################
# Sets up logging levels for each of the Jini services
#
# NOTE: By default no messages are printed on the console since
# some of the logging levels are set to OFF.
# For troubleshooting reasons you may change the logging level
# to one of the following levels: FINEST, WARNING, CONFIG etc.
# For more info please refer to the relevant JavaDocs:
# http://java.sun.com/products/jini/2.1/doc/api/
# and the relevant product JavaDocs bundled with the product 
# at docs\JavaDoc directory.
##############################################################

# For Jini services troubleshooting - modify the relevant service logging level
# Jini Mahalo - Transaction Manager logging level
# - FINE or FINEST for debugging and troubleshooting
com.sun.jini.mahalo.startup.level = INFO
com.sun.jini.mahalo.destroy.level = INFO
# Jini Reggie - Lookup Service logging level
# - FINE or FINEST for debugging and troubleshooting
com.sun.jini.reggie.level = WARNING
# Jini ServiceStarter logging level - FINEST for debugging and troubleshooting
com.sun.jini.start.service.starter.level = INFO
# Webster HTTPD logging level - FINEST for debugging and troubleshooting
org.jini.rio.tools.webster.level = INFO
net.jini.discovery.LookupLocatorDiscovery.level = WARNING
net.jini.lookup.ServiceDiscoveryManager.level = WARNING
net.jini.discovery.LookupDiscovery.level = WARNING

net.jini.lookup.JoinManager.level = WARNING

# Jini Configuration logging
# See: http://java.sun.com/products/jini/2.1/doc/api/net/jini/config/package-summary.html
net.jini.config.level = WARNING