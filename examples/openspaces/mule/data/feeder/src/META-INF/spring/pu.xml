<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xmlns:os-jms="http://www.openspaces.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/jms http://www.openspaces.org/schema/jms/openspaces-jms.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/sla/openspaces-sla.xsd">


    <!--
        Simply use SLA to add a monitor that uses the viewDataCounter bean to count the globaly
        processed Data objects (using LocalView) and count the number of feeds written.

        Based on the feed count monitor we add a relocation policy that will relocate this feeder
        each time 50 feeds has been written to the space (commented out).
     -->
    <os-sla:sla>
        <!--<os-sla:relocation-policy monitor="Feed Count" high="50" />-->
<!--
        <os-sla:monitors>
            <os-sla:bean-property-monitor name="Processed Data" bean-ref="viewDataCounter" property-name="processedDataCount" />
            <os-sla:bean-property-monitor name="Feed Count" bean-ref="dataFeeder" property-name="feedCount" />
        </os-sla:monitors>
-->
    </os-sla:sla>
    
    <!--
        Spring propery configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <props>
                <prop key="numberOfTypes">100</prop>
            </props>
        </property>
    </bean>

    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>

    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we perform a lookup on the space since we are working against a remote space.
    -->
    <os-core:space id="space" url="jini://*/*/space" />

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space"/>

    <!--
        The Data feeder bean, writing new Data objects to the space in a constant interval.
    -->
    <bean id="dataFeeder" class="org.openspaces.example.mule.data.feeder.DataFeeder">
        <property name="instanceId" value="${clusterInfo.instanceId}" />
        <property name="numberOfTypes" value="${numberOfTypes}" />
    </bean>
    
</beans>