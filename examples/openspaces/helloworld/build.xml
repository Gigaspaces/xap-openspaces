<?xml version="1.0"?>

<project name="openspaces helloworld example" default="usage" basedir=".">

    <!-- Two options to have custom build properties file (for example, to set the gshome.dir) -->
    <property file="../../../build.properties"/>
    <property file="${basedir}/build.properties" />

    <condition property="gshome.dir" value="../../../">
        <not>
            <isset property="gshome.dir"/>
        </not>
    </condition>

    <property name="pulocation" value="${basedir}/pu/helloworld"/>

    <path id="all-libs">

        <fileset dir="${gshome.dir}/lib">
            <include name="**/*.jar"/>
            <exclude name="openspaces/mule-os.jar" />
        </fileset>

        <fileset dir="${basedir}">
            <include name="lib/*.jar"/>
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="OpenSpaces build script"/>
        <echo message="-----------------------------------------"/>
        <echo message=""/>
        <echo message="Among the available targets are:"/>
        <echo message=""/>
        <echo message="clean                    --> Cleans all output dirs"/>
        <echo message="build                    --> Build all; don't create JARs"/>
        <echo message="dist                     --> Build the distribution"/>
        <echo message="deploy                   --> Build, copies and deploys the hello world on the service grid"/>
        <echo message="undeploy                 --> Undeploys the hello world"/>
        <echo message=""/>
    </target>

    <target name="clean">
        <delete dir="${pulocation}/org"/>
    </target>

    <target name="build">
        <mkdir dir="${pulocation}"/>

        <javac destdir="${pulocation}" source="1.4" target="1.4" debug="on"
               deprecation="false" optimize="false" failonerror="true">
            <src path="src"/>
            <classpath refid="all-libs"/>
        </javac>

        <copy todir="${pulocation}" preservelastmodified="true">
            <fileset dir="src">
                <include name="**/*.properties"/>
                <include name="**/*.handlers"/>
                <include name="**/*.schemas"/>
                <include name="**/*.xml"/>
                <include name="**/*.dtd"/>
                <include name="**/*.xsd"/>
            </fileset>
        </copy>
    </target>

    <target name="dist" depends="build">
        <!-- Build a common jar file with the SimpleMessage object to include under shared-lib -->
        <mkdir dir="${pulocation}/shared-lib" />
        <jar basedir="${pulocation}" jarfile="${pulocation}/shared-lib/common.jar" includes="org/**/SimpleMessage.class" />
        <!-- Now delete it from the pu location -->
        <delete file="${pulocation}/org/openspaces/example/helloworld/SimpleMessage.class" />

        <mkdir dir="${pulocation}/lib" />
        <copy todir="${pulocation}/lib">
            <fileset dir="${basedir}/lib" />
        </copy>

        <jar basedir="${pulocation}" jarfile="${basedir}/pu/helloworld.jar"/>
    </target>

    <target name="deploy" depends="dist">
        <deploy name="${basedir}/pu/helloworld.jar" />
    </target>

    <target name="undeploy">
        <undeploy name="helloworld" />
    </target>

    <macrodef name="deploy">
        <attribute name="name"/>
        <sequential>
            <java classname="org.openspaces.pu.container.servicegrid.deploy.Deploy" fork="false">
                <classpath refid="all-libs"/>
                <arg value="@{name}"/>
            </java>
        </sequential>
    </macrodef>

    <macrodef name="undeploy">
        <attribute name="name"/>
        <sequential>
            <java classname="org.openspaces.pu.container.servicegrid.deploy.Undeploy" fork="false">
                <classpath refid="all-libs"/>
                <arg value="@{name}"/>
            </java>
        </sequential>
    </macrodef>

</project>