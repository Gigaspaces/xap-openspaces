/*******************************************************************************
 * 
 * Copyright (c) 2012 GigaSpaces Technologies Ltd. All rights reserved
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *  
 ******************************************************************************/
package org.openspaces.core.gateway;

import java.util.List;
import java.util.UUID;

import net.jini.core.discovery.LookupLocator;

import com.gigaspaces.internal.cluster.node.impl.gateway.lus.ReplicationLookupParameters;

/**
 * A gateway lookups factory bean for constructing {@link ReplicationLookupParameters} using
 * the {@link #asReplicationLookupParameters} method. 
 * 
 * @author Idan Moyal
 * @since 8.0.3
 *
 */
public class GatewayLookupsFactoryBean {

    private String lookupGroup = getAutoGeneratedLookupGroup();
    private List<GatewayLookup> gatewayLookups;

    /**
     * @return The gateway's lookup group.
     */
    public String getLookupGroup() {
        return lookupGroup;
    }
    
    /**
     * Sets the gateway's lookup group.
     * @param lookupGroup The lookup group.
     */
    public void setLookupGroup(String lookupGroup) {
        this.lookupGroup = lookupGroup;
    }
    
    /**
     * @return The gateway's associated lookups configuration as a {@link GatewayLookup}s array.
     */
    public List<GatewayLookup> getGatewayLookups() {
        return gatewayLookups;
    }
    
    /**
     * Sets the gateway's lookups configuration.
     * @param gatewayLookups The lookups configuration.
     */
    public void setGatewayLookups(List<GatewayLookup> gatewayLookups) {
        this.gatewayLookups = gatewayLookups;
    }
    
    /**
     * @return A new {@link ReplicationLookupParameters} instance constructed of the bean's properties. 
     */
    public ReplicationLookupParameters asReplicationLookupParameters() {
        ReplicationLookupParameters parameters = new ReplicationLookupParameters();
        parameters.setLookupGroups(new String[] {lookupGroup});
        if (gatewayLookups != null) {
            LookupLocator[] locators = new LookupLocator[gatewayLookups.size()];
            for (int i = 0; i < gatewayLookups.size(); i++) {
                GatewayLookup gatewayLookup = gatewayLookups.get(i);
                locators[i] = new LookupLocator(gatewayLookup.getHost(), Integer.valueOf(gatewayLookup.getDiscoveryPort()));
            }
            parameters.setLookupLocators(locators);
        }
        return parameters;
    }
    
    private static String getAutoGeneratedLookupGroup() {
        return "gateway-" + UUID.randomUUID().toString();
    }
    
}
