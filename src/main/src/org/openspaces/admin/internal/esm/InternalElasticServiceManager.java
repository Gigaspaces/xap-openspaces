package org.openspaces.admin.internal.esm;

import java.util.Map;

import net.jini.core.lookup.ServiceID;

import org.jini.rio.monitor.event.Events;
import org.openspaces.admin.esm.ElasticServiceManager;
import org.openspaces.admin.internal.support.InternalAgentGridComponent;
import org.openspaces.admin.pu.ProcessingUnit;
import org.openspaces.admin.pu.elastic.config.ScaleStrategyConfig;
import org.openspaces.admin.pu.elastic.events.ElasticProcessingUnitEvent;

/**
 * @author Moran Avigdor
 * @author itaif
 */
public interface InternalElasticServiceManager extends ElasticServiceManager, InternalAgentGridComponent  {

    ServiceID getServiceID();

    void setProcessingUnitElasticProperties(ProcessingUnit pu, Map<String,String> properties);
    
    void setProcessingUnitScaleStrategyConfig(ProcessingUnit pu, ScaleStrategyConfig scaleStrategyConfig);

    ScaleStrategyConfig getProcessingUnitScaleStrategyConfig(ProcessingUnit pu);

    boolean isManagingProcessingUnit(ProcessingUnit pu);

    boolean isManagingProcessingUnitAndScaleNotInProgress(ProcessingUnit pu);
    
    /**
     * @since 9.0.0
     * This is a workaround for GS-9999
     */
    @Deprecated
    boolean isManagingProcessingUnitAndScaleNotInProgressNoCache(ProcessingUnit pu);
    
    /**
     * @since 8.0.6
     */
    boolean isManagingProcessingUnitAndScaleInProgress(ProcessingUnit pu);
    
    /**
     * @return the list of events generated by the ESM.
     * For the beginning of the list start with cursor = 0
     * @since 8.0.6
     */
    Events getScaleStrategyEvents(final long cursor, final int maxNumberOfEvents);

    /**
     * reflect the ESM state in the admin API object by analyzing the events
     * @since 8.0.6
     */
    void processElasticScaleStrategyEvent(ElasticProcessingUnitEvent event);   
    
}