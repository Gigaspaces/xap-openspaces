<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<xsd:schema xmlns="http://www.openspaces.org/schema/events"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:beans="http://www.springframework.org/schema/beans"
            xmlns:tool="http://www.springframework.org/schema/tool"
            xmlns:os-core="http://www.openspaces.org/schema/core"
            targetNamespace="http://www.openspaces.org/schema/events"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool"/>
    <xsd:import namespace="http://www.openspaces.org/schema/core"/>

    <xsd:element name="polling-container">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="baseEventContainer">
                    <xsd:sequence>
                        <xsd:element name="tx-support" type="txEventSupport" minOccurs="0" maxOccurs="1"/>
                        <xsd:element name="trigger-operation-handler" type="triggerOperationHandlerType" minOccurs="0"
                                     maxOccurs="1"/>
                        <xsd:element name="receive-operation-handler" type="receiveOperationHandlerType" minOccurs="0"
                                     maxOccurs="1"/>
                        <xsd:choice>
                            <xsd:element ref="os-core:template" minOccurs="0" maxOccurs="1"/>
                            <xsd:element ref="os-core:sql-query" minOccurs="0" maxOccurs="1"/>
                        </xsd:choice>
                        <xsd:element name="listener" type="spaceDataEventListenerType" minOccurs="1" maxOccurs="1"/>
                    </xsd:sequence>
                    <xsd:attribute name="receive-timeout" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="recovery-interval" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="concurrent-consumers" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="max-concurrent-consumers" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="max-events-per-task" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="idle-task-execution-limit" type="xsd:nonNegativeInteger"/>
                    <xsd:attribute name="perform-snapshot" type="xsd:boolean"/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="notify-container">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="baseEventContainer">
                    <xsd:sequence>
                        <xsd:element name="tx-support" type="txEventSupport" minOccurs="0" maxOccurs="1"/>
                        <xsd:element name="notify" minOccurs="0" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:attribute name="write" type="xsd:boolean"/>
                                <xsd:attribute name="update" type="xsd:boolean"/>
                                <xsd:attribute name="take" type="xsd:boolean"/>
                                <xsd:attribute name="lease-expire" type="xsd:boolean"/>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="batch" minOccurs="0" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:attribute name="size" type="xsd:nonNegativeInteger" use="required"/>
                                <xsd:attribute name="time" type="xsd:nonNegativeInteger" use="required"/>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="lease" minOccurs="0" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:attribute name="auto-renew" type="xsd:boolean"/>
                                <xsd:attribute name="timeout" type="xsd:nonNegativeInteger"/>
                                <!-- TODO LeaseListener configuration -->
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="notify-filter" type="notifyFilterType" minOccurs="0" maxOccurs="1"/>
                        <xsd:choice>
                            <xsd:element ref="os-core:template" minOccurs="0" maxOccurs="1"/>
                            <xsd:element ref="os-core:sql-query" minOccurs="0" maxOccurs="1"/>
                        </xsd:choice>
                        <xsd:element name="listener" type="spaceDataEventListenerType" minOccurs="1" maxOccurs="1"/>
                    </xsd:sequence>
                    <xsd:attribute name="com-type">
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="UNICAST"/>
                                <xsd:enumeration value="MULTIPLEX"/>
                                <xsd:enumeration value="MULTICAST"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:attribute>
                    <xsd:attribute name="fifo" type="xsd:boolean"/>
                    <xsd:attribute name="trigger-notify-template" type="xsd:boolean"/>
                    <xsd:attribute name="replicate-notify-template" type="xsd:boolean"/>
                    <xsd:attribute name="perform-take-on-notify" type="xsd:boolean"/>
                    <xsd:attribute name="ignore-event-on-null-take" type="xsd:boolean"/>
                    <xsd:attribute name="perform-snapshot" type="xsd:boolean"/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="baseEventContainer" abstract="true">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:attribute name="giga-space" type="os-core:gigaSpaceRefType" use="required"/>
                <xsd:attribute name="active-when-primary" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="txEventSupport">
        <xsd:attribute name="tx-manager" type="os-core:txManagerType" use="required"/>
        <xsd:attribute name="tx-name" type="xsd:string"/>
        <xsd:attribute name="tx-timeout" type="xsd:nonNegativeInteger"/>
        <xsd:attribute name="tx-isolation" default="DEFAULT">
            <xsd:simpleType>
                <xsd:annotation>
                    <xsd:documentation source="java:org.springframework.transaction.annotation.Isolation">
                        <![CDATA[The transaction isolation level.]]>
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="DEFAULT"/>
                    <xsd:enumeration value="READ_UNCOMMITTED"/>
                    <xsd:enumeration value="READ_COMMITTED"/>
                    <xsd:enumeration value="REPEATABLE_READ"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="notifyFilterType">
        <xsd:annotation>
            <xsd:appinfo>
                <tool:annotation kind="ref">
                    <tool:expected-type type="com.j_spaces.core.client.INotifyDelegatorFilter"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:group ref="beans:collectionElements"/>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
    A short-cut alternative to a nested "<ref bean='...'/>".
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="spaceDataEventListenerType">
        <xsd:annotation>
            <xsd:appinfo>
                <tool:annotation kind="ref">
                    <tool:expected-type type="org.openspaces.events.SpaceDataEventListener"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:group ref="beans:collectionElements"/>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
    A short-cut alternative to a nested "<ref bean='...'/>".
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="receiveOperationHandlerType">
        <xsd:annotation>
            <xsd:appinfo>
                <tool:annotation kind="ref">
                    <tool:expected-type type="org.openspaces.events.polling.receive.ReceiveOperationHandler"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:group ref="beans:collectionElements"/>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
    A short-cut alternative to a nested "<ref bean='...'/>".
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="triggerOperationHandlerType">
        <xsd:annotation>
            <xsd:appinfo>
                <tool:annotation kind="ref">
                    <tool:expected-type type="org.openspaces.events.polling.trigger.TriggerOperationHandler"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:group ref="beans:collectionElements"/>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
    A short-cut alternative to a nested "<ref bean='...'/>".
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="baseResultEventAdapter">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:attribute name="write-lease" type="xsd:nonNegativeInteger"/>
                <xsd:attribute name="update-or-write" type="xsd:boolean"/>
                <xsd:attribute name="update-timeout" type="xsd:nonNegativeInteger"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="annotation-adapter">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="baseResultEventAdapter">
                    <xsd:sequence>
                        <xsd:element name="delegate" minOccurs="1" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:group ref="beans:collectionElements"/>
                                <xsd:attribute name="ref" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:documentation><![CDATA[
                        A short-cut alternative to a nested "<ref bean='...'/>".
                                    ]]></xsd:documentation>
                                    </xsd:annotation>
                                </xsd:attribute>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="method-adapter">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="baseResultEventAdapter">
                    <xsd:sequence>
                        <xsd:element name="delegate" minOccurs="1" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:group ref="beans:collectionElements"/>
                                <xsd:attribute name="ref" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:documentation><![CDATA[
                        A short-cut alternative to a nested "<ref bean='...'/>".
                                    ]]></xsd:documentation>
                                    </xsd:annotation>
                                </xsd:attribute>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="method-name" type="xsd:string" use="required"/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>