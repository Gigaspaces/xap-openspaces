<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <description>
        Test the ability to run PU with mule embedded in it, the OpenSpacesMuleContextLoader loads muleref.xml
        as a mule appliction and bind its appliction context has a child of this appliction context.
        The muleref.xml declares some beans that using gigaSpace and helloPollingEventContainer beans.
    </description>

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>


    <!--
        A bean representing a space (an IJSpace implementation).
    -->
    <os-core:space id="space" url="/./space" lookup-groups="${user.name}"/>

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space"/>


    <!--
        A polling event container that perfoms (by default) polling take operations against
        the space using the provided template (in our case, and the non processed data objects).
        Once a match is found, the data processor bean event listener is triggered using the
        annotation adapter.
    -->
    <os-events:polling-container id="helloPollingEventContainer" giga-space="gigaSpace" pass-array-as-is="true">
        <os-core:template>
            <bean class="org.openspaces.itest.esb.mule.SimpleMessage">
                <property name="read" value="false"/>
            </bean>
        </os-core:template>
    </os-events:polling-container>

    <!--
        Mule reference - will load the mule configuration from the file that set in the location property and set the
        PU application context as the parent of Mule application context, giving it the ability to access beans that
        declared in the PU application context.
     -->
    <bean class="org.openspaces.esb.mule.pu.OpenSpacesMuleContextLoader">
        <property name="location" value="org/openspaces/itest/esb/mule/pu/muleref.xml"/>
    </bean>

</beans>
