<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:sm="http://servicemix.apache.org/config/1.0"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:foo="http://servicemix.org/cheese/"

       xsi:schemaLocation="http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
        http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.openspaces.org/servicemix/openspacesflow/1.0 http://www.openspaces.org/servicemix/servicemix-os-flow.xsd">


    <!--
        A bean representing a space (an IJSpace implementation).
    -->
    <os-core:space id="space" url="/./space" lookup-groups="${user.name}"/>

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space"/>


    <!--
        A polling event container that perfoms (by default) polling take operations against
        the space using the provided template (in our case, and the non processed data objects).
        Once a match is found, the data processor bean event listener is triggered using the
        annotation adapter.
    -->
    <os-events:polling-container id="helloPollingEventContainer" giga-space="gigaSpace">
        <os-core:template>
            <spring:bean class="org.openspaces.itest.esb.servicemix.Message">
                <spring:property name="read" value="false"/>
            </spring:bean>
        </os-core:template>
    </os-events:polling-container>

    <!-- ******************************************************** -->

    <!-- the JBI container -->
    <sm:container id="jbi" embedded="true" createJmxConnector="false" createMBeanServer="false" useMBeanServer="false">
        <sm:activationSpecs>

            <!-- Writes the org.openspaces.itest.esb.servicemix.Message to the space -->
            <sm:activationSpec componentName="mySender" service="foo:sender">
                <sm:component>
                    <bean class="org.openspaces.esb.servicemix.OpenSpacesOutBinding">
                        <property name="gigaSpace">
                            <ref local="gigaSpace"/>
                        </property>
                    </bean>
                </sm:component>
            </sm:activationSpec>

            <!--Sets the org.openspaces.itest.esb.servicemix.Message read to true and pass it to -->
            <sm:activationSpec componentName="messagereader" service="foo:messagereader"
                               destinationService="foo:sender">
                <sm:component>
                    <bean class="org.openspaces.itest.esb.servicemix.MessageReaderSE"/>
                </sm:component>
            </sm:activationSpec>

            <!-- Taking org.openspaces.itest.esb.servicemix.Message with read=false from space and pass it to
             messagereader service -->
            <sm:activationSpec componentName="myReceiver" service="foo:myReceiver"
                               destinationService="foo:messagereader">
                <sm:component>
                    <bean class="org.openspaces.esb.servicemix.OpenSpacesInBinding">
                        <property name="eventListenerContainer">
                            <ref local="helloPollingEventContainer"/>
                        </property>
                    </bean>
                </sm:component>
            </sm:activationSpec>
        </sm:activationSpecs>
    </sm:container>


</beans>
