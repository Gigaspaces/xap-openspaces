<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
      xmlns:os-events="http://www.openspaces.org/schema/events"
      xmlns:os-core="http://www.openspaces.org/schema/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:os-eventcontainer="http://www.openspaces.org/schema/mule/os-eventcontainer"
      xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.0"
      xsi:schemaLocation="http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.openspaces.org/schema/mule/os-eventcontainer http://www.openspaces.org/schema/mule/os-eventcontainer.xsd
       http://www.mulesource.org/schema/mule/stdio/2.0 http://www.mulesource.org/schema/mule/stdio/2.0/mule-stdio.xsd">

    <spring:beans>
        <!--
            A bean representing a space (an IJSpace implementation).

            Note, we do not specify here the cluster topology of the space. It is declated outside of
            the processing unit or within the SLA bean.
        -->
        <os-core:space id="space" url="/./space"/>

        <!--
            OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
        -->
        <os-core:giga-space id="gigaSpace" space="space"/>

        <!--
            A polling event container that perfoms (by default) polling take operations against
            the space using the provided template (in our case, and the non processed data objects).
            Once a match is found, the data processor bean event listener is triggered using the
            annotation adapter.
        -->
        <os-events:polling-container id="dataProcessorPollingEventContainer" giga-space="gigaSpace">
            <os-core:template>
                <spring:bean class="${puGroupId}.common.Data">
                    <spring:property name="processed" value="false"/>
                </spring:bean>
            </os-core:template>
        </os-events:polling-container>


    </spring:beans>


    <os-eventcontainer:connector name="gigaSpacesConnector"/>

    <model name="processor">
        <service name="DataProcessorUMO">
            <inbound>
                <inbound-endpoint address="os-eventcontainer://dataProcessorPollingEventContainer"/>
            </inbound>

            <component class="${puGroupId}.processor.Processor"/>
            
            <outbound>
                <outbound-pass-through-router>
                    <outbound-endpoint address="os-eventcontainer://gigaSpace"/>
                </outbound-pass-through-router>
            </outbound>
        </service>

    </model>
</mule>