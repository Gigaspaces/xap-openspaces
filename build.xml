<?xml version="1.0"?>

<project name="openspaces" default="usage" basedir=".">

    <property file="project.properties"/>
    <property file="build.properties"/>

    <path id="all-libs">

        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
            <exclude name="openspaces/**"/>
            <exclude name="ant/**"/>
        </fileset>

    </path>

    <taskdef name="retrotranslator" classname="net.sf.retrotranslator.transformer.RetrotranslatorTask">
        <classpath refid="all-libs"/>
    </taskdef>

    <target name="usage">
        <echo message=""/>
        <echo message="OpenSpaces build script"/>
        <echo message="-----------------------------------------"/>
        <echo message=""/>
        <echo message="Among the available targets are:"/>
        <echo message=""/>
        <echo message="clean    --> Cleans all output dirs"/>
        <echo message="build    --> build all; don't create JARs"/>
        <echo message="tests    --> run tests"/>
        <echo message="dist     --> create a distribution"/>
        <echo message=""/>
    </target>

    <target name="clean" description="Clean all output dirs (dist, javadocs, classes, test-classes, etc)">
        <!-- Just kill target dir (it's safer). No need at this point to keep it. -->
        <delete dir="${target.dir}"/>
        <delete dir="${lib.dir}/${name}"/>
    </target>

    <!--
    ########### COMPILE TARGETS ###########
    -->

    <target name="buildmain" description="Compile main source tree java files into class files">

        <mkdir dir="${target.classes.dir}"/>
        <mkdir dir="${target.classes.dir}/META-INF"/>

        <javac destdir="${target.classes.dir}" source="1.5" target="1.5" debug="${debug}"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${main.src.dir}"/>
            <classpath refid="all-libs"/>
        </javac>

        <copy todir="${target.classes.dir}" preservelastmodified="true">
            <fileset dir="${main.src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.handlers"/>
                <include name="**/*.schemas"/>
                <include name="**/*.xml"/>
                <include name="**/*.dtd"/>
                <include name="**/*.xsd"/>
                <include name="**/*.groovy"/>
            </fileset>
        </copy>
    </target>


    <target name="buildexamples" description="Build the examples that come with OpenSpaces">

        <ant antfile="build.xml" dir="examples/openspaces/helloworld/" target="dist"/>
        <ant antfile="build.xml" dir="examples/openspaces/data/" target="dist"/>
        <ant antfile="build.xml" dir="examples/openspaces/data-1.4/" target="dist"/>
    </target>

    <target name="build_1_5" depends="clean, buildmain" description="Compile main sources"/>

    <target name="build_1_4" depends="clean, buildmain" description="Compile main sources">
        <retrotranslator srcdir="${target.classes.dir}" verify="true" failonwarning="false"/>
    </target>

    <target name="fulljar_1_5" depends="build_1_5, fulljar"/>

    <target name="fulljar" description="Create full JAR file with all OpenSpaces classes">

        <mkdir dir="${lib.dir}/${name}"/>
        <delete file="${lib.dir}/${name}/${name}.jar"/>


        <jar jarfile="${lib.dir}/${name}/${name}.jar">
            <fileset dir="${target.classes.dir}">
                <include name="META-INF/**"/>
                <include name="org/openspaces/**"/>
                <exclude name="org/mule/**"/>
                <exclude name="org/openspaces/esb/mule/**"/>
                <exclude name="org/openspaces/pu/container/jee/jetty/**"/>
                <exclude name="org/openspaces/pu/container/jee/glassfish/**"/>
                <exclude name="org/glassfish/**"/>
                <exclude name="org/apache/catalina/**"/>
                <exclude name="com/sun/**"/>
                <exclude name="org/openspaces/jee/sessions/**"/>
                <exclude name="META-INF/services/org/mule/**"/>
                <exclude name="META-INF/mule-spring.handlers"/>
                <exclude name="META-INF/mule-spring.schemas"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

        <copy file="${target.classes.dir}/META-INF/spring.handlers"
              tofile="${target.classes.dir}/META-INF/spring.handlers.orig"/>
        <copy file="${target.classes.dir}/META-INF/spring.schemas"
              tofile="${target.classes.dir}/META-INF/spring.schemas.orig"/>
        <copy file="${target.classes.dir}/META-INF/mule-spring.handlers"
              tofile="${target.classes.dir}/META-INF/spring.handlers" overwrite="true"/>
        <copy file="${target.classes.dir}/META-INF/mule-spring.schemas"
              tofile="${target.classes.dir}/META-INF/spring.schemas" overwrite="true"/>


        <delete file="${lib.dir}/${name}/mule-os.jar"/>
        <jar jarfile="${lib.dir}/${name}/mule-os.jar">
            <fileset dir="${target.classes.dir}">
                <include name="org/openspaces/esb/mule/**"/>
                <include name="META-INF/services/org/mule/**"/>
                <include name="META-INF/spring.handlers"/>
                <include name="META-INF/spring.schemas"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

        <delete file="${lib.dir}/${name}/mule-os-boot.jar"/>
        <jar jarfile="${lib.dir}/${name}/mule-os-boot.jar">
            <fileset dir="${target.classes.dir}">
                <include name="org/mule/**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

        <delete file="${lib.dir}/${name}/openspaces-jetty.jar"/>
        <jar jarfile="${lib.dir}/${name}/openspaces-jetty.jar">
            <fileset dir="${target.classes.dir}">
                <include name="org/openspaces/pu/container/jee/jetty/**"/>
                <include name="org/openspaces/jee/sessions/jetty/**" />
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

        <delete file="${lib.dir}/${name}/openspaces-glassfish.jar"/>
        <jar jarfile="${lib.dir}/${name}/openspaces-glassfish.jar">
            <fileset dir="${target.classes.dir}">
                <include name="org/openspaces/pu/container/jee/glassfish/**"/>
                <include name="org/glassfish/**" />
                <include name="com/sun/**" />
                <include name="org/apache/catalina/**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

        <copy file="${target.classes.dir}/META-INF/spring.handlers.orig"
              tofile="${target.classes.dir}/META-INF/spring.handlers" overwrite="true"/>
        <copy file="${target.classes.dir}/META-INF/spring.schemas.orig"
              tofile="${target.classes.dir}/META-INF/spring.schemas" overwrite="true"/>
        <delete file="${target.classes.dir}/META-INF/spring.handlers.orig"/>
        <delete file="${target.classes.dir}/META-INF/spring.schemas.orig"/>

    </target>

    <target name="srczip" description="Create source ZIP (containing Java sources)">

        <delete file="lib/${name}/openspaces-src.zip"/>

        <zip zipfile="lib/${name}/openspaces-src.zip">
            <fileset dir="${main.src.dir}">
                <include name="org/openspaces/**"/>
            </fileset>
        </zip>

    </target>

    <!--
        Generate javadoc for the main and JDK 1.5 sources.
    -->
    <target name="javadoc" description="Generate framework Javadocs">

        <delete dir="${target.javadoc.dir}" failonerror="false"/>
        <mkdir dir="${target.javadoc.dir}"/>

        <javadoc sourcepath="${main.src.dir}" destdir="${target.javadoc.dir}" windowtitle="GigaSpaces - Open Spaces"
                 source="1.5" access="protected" author="true" version="true" use="true"
                 defaultexcludes="true"
                 header='&lt;a href=\"http://www.gigaspaces.com/\" target=\"_top\"&gt;GigaSpaces - Open Spaces&lt;/a&gt;'>
            <arg value="-breakiterator"/>
            <arg value="-J-Xmx128m"/>
            <arg value="-J-XX:MaxPermSize=128m"/>
            <doctitle><![CDATA[<h1>GigaSpaces Open Spaces</h1>]]></doctitle>
            <bottom>
                <![CDATA[<i>Copyright &copy; <a href="http://www.gigaspaces.com/" target="_top">GigaSpaces</a>.</i>]]></bottom>
            <classpath refid="all-libs"/>
            <packageset dir="${main.src.dir}" defaultexcludes="yes">
                <include name="org/openspaces/**"/>
                <exclude name="org/openspaces/admin/internal/**" />
            </packageset>
            <link href="../JavaDoc"/>
            <link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
            <link href="http://static.springframework.org/spring/docs/2.5.x/api"/>
            <link href="http://aopalliance.sourceforge.net/doc"/>
            <!-- Caucho Burlap/Hessian -->
            <link href="http://cglib.sourceforge.net/apidocs"/>
            <link href="http://jakarta.apache.org/commons/logging/apidocs/"/>
            <link href="http://jakarta.apache.org/commons/pool/apidocs/"/>
        </javadoc>

    </target>

    <target name="schema" description="Copy over schema files">
        <delete dir="lib/${name}/schema"/>
        <copy todir="lib/${name}/schema" flatten="true">
            <fileset dir="${main.src.dir}">
                <include name="**/*.xsd"/>
            </fileset>
        </copy>
    </target>

    <target name="license" description="Copy over license files">
        <copy todir="lib/${name}" file="${basedir}/openspaces.license.txt"/>
        <copy todir="lib/${name}" file="${basedir}/openspaces.notice.txt"/>
    </target>

    <target name="dist_1_4"
            depends="build_1_4, fulljar, buildexamples, srczip, javadoc, schema, license"
            description="Creates the OpenSpaces distribution">
        <mkdir dir="${dist.dir}"/>
        <delete file="${dist.dir}/${name}-1.4.zip"/>
        <zip zipfile="${dist.dir}/${name}-1.4.zip">
            <zipfileset dir="${basedir}">
                <include name="bin/pu*"/>
                <include name="deploy/**"/>
                <include name="docs/openspaces-javadoc/**"/>
                <include name="tools/**"/>
                <exclude name="tools/maven/maven-openspaces-plugin/target/**" />
                <exclude name="tools/**/*.iml" />

                <include name="examples/**"/>
                <exclude name="examples/openspaces/data/**"/>
                <exclude name="examples/**/*.iml"/>
                <exclude name="examples/**/.cvsignore"/>

                <include name="lib/${name}/**"/>
                <include name="lib/groovy/**"/>
                <include name="lib/spring/spring.jar" />
                <include name="lib/j2ee/activation.jar" />
                <include name="lib/j2ee/jta.jar" />
                <include name="lib/j2ee/connector.jar" />
                <include name="lib/velocity/**" />

            </zipfileset>
        </zip>
        <delete dir="${target.dir}/temp"/>
        <mkdir dir="${target.dir}/temp"/>
        <unzip src="${dist.dir}/${name}-1.4.zip" dest="${target.dir}/temp"/>
        <move todir="${target.dir}/temp/examples/openspaces/data">
            <fileset dir="${target.dir}/temp/examples/openspaces/data-1.4"/>
        </move>
        <zip zipfile="${dist.dir}/${name}-1.4.zip">
            <zipfileset dir="${target.dir}/temp"/>
        </zip>
        <mkdir dir="${dist.dir}/1.4"/>
        <copy todir="${dist.dir}/1.4" file="${lib.dir}/${name}/${name}.jar"/>
    </target>

    <target name="dist_1_5"
            depends="build_1_5, fulljar, buildexamples, srczip, javadoc, schema, license"
            description="Creates the OpenSpaces distribution">
        <mkdir dir="${dist.dir}"/>
        <delete file="${dist.dir}/${name}-1.5.zip"/>
        <zip zipfile="${dist.dir}/${name}-1.5.zip">
            <zipfileset dir="${basedir}">
                <include name="bin/pu*"/>
                <include name="deploy/**"/>
                <include name="docs/openspaces-javadoc/**"/>
                <include name="tools/**"/>
            	<exclude name="tools/maven/maven-openspaces-plugin/target/**" />
                <exclude name="tools/**/*.iml" />

                <include name="examples/**"/>
                <exclude name="examples/openspaces/data-1.4/**"/>
                <exclude name="examples/**/*.iml"/>
                <exclude name="examples/**/.cvsignore"/>
                <include name="lib/${name}/**"/>
                <include name="lib/groovy/**"/>
                <include name="lib/spring/spring.jar" />
                <include name="lib/j2ee/common-annotations.jar" />
                <include name="lib/j2ee/activation.jar" />
                <include name="lib/j2ee/jta.jar" />
                <include name="lib/j2ee/connector.jar" />
                <include name="lib/jetty/**" />
                <!--<include name="lib/glassfish/**" />-->
                <include name="lib/velocity/**" />
            </zipfileset>
        </zip>
        <mkdir dir="${dist.dir}/1.5"/>
        <copy todir="${dist.dir}/1.5" file="${lib.dir}/${name}/${name}.jar"/>
    </target>

    <target name="dist">
        <antcall target="dist_1_5"/>
        <antcall target="dist_1_4"/>
    </target>

    <target name="install_1_5" depends="dist_1_5">
        <unzip src="${dist.dir}/${name}-1.5.zip" dest="${gshome.dir}"/>
    </target>


    <!--
    ########### TEST TARGETS ###########
    -->

    <!--
         Compile the main test tree.
     -->
    <target name="buildmaintests" depends="build_1_5"
            description="Compile test source tree java files into class files">

        <mkdir dir="${target.testclasses.dir}"/>

        <javac destdir="${target.testclasses.dir}" source="1.5" target="1.5" debug="${debug}"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${main.test.dir}"/>
            <classpath refid="all-libs"/>
            <classpath location="${target.classes.dir}"/>
        </javac>

        <!-- Pick up config files from test directory -->
        <copy todir="${target.testclasses.dir}" preservelastmodified="true">
            <fileset dir="${main.test.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>

    </target>


    <target name="buildtests" depends="buildmaintests" description="Compile main test sources"/>


    <target name="maintests" depends="buildtests" description="Run main tests">

        <mkdir dir="${target.junit.reports.dir}"/>

        <junit forkmode="${junit.forkmode}" printsummary="yes" haltonfailure="yes" haltonerror="yes">

            <jvmarg line="-Djava.security.policy=policy/policy.all -Djava.awt.headless=true -Xmx512m -XX:MaxPermSize=128m"/>

            <classpath location="${target.testclasses.dir}"/>
            <classpath location="${target.classes.dir}"/>

            <!-- Need files loaded as resources -->
            <classpath location="${main.test.dir}"/>

            <classpath refid="all-libs"/>

            <formatter type="plain" usefile="false"/>

            <batchtest fork="yes" todir="${target.junit.reports.dir}">
                <fileset dir="${target.testclasses.dir}" includes="${test.includes}" excludes="${test.excludes}"/>
            </batchtest>

        </junit>

    </target>


    <target name="tests" depends="maintests" description="Run tests"/>


    <!--
         Run test suite and generate test summary, for both main and sandbox tests.
         Does not halt on failure or error, in contrast to the "tests" target above.
     -->
    <target name="testsummary" depends="buildtests" description="Run tests and generate test summary">

        <mkdir dir="${target.junit.reports.dir}"/>
        <mkdir dir="${target.junit.summary.dir}"/>

        <junit failureproperty="junit.tests.failed" forkmode="${junit.forkmode}" printsummary="yes" haltonfailure="no" haltonerror="no">

            <jvmarg line="-Djava.security.policy=policy/policy.all -Djava.awt.headless=true -Xmx512m -XX:MaxPermSize=128m"/>

            <!-- Must go first to ensure any jndi.properties files etc take precedence  -->
            <classpath location="${target.testclasses.dir}"/>
            <classpath location="${target.classes.dir}"/>

            <!-- Need files loaded as resources -->
            <classpath location="${main.test.dir}"/>

            <classpath refid="all-libs"/>

            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>

            <batchtest fork="yes" todir="${target.junit.reports.dir}">
                <fileset dir="${target.testclasses.dir}" includes="${test.includes}" excludes="${test.excludes}"/>
            </batchtest>

        </junit>

        <junitreport todir="${target.junit.reports.dir}">
            <fileset dir="${target.junit.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${target.junit.summary.dir}"/>
        </junitreport>
    	
    	<fail if="junit.tests.failed" message="JUnit tests failed. exiting..."/>

    </target>

    <target name="clean_tests" depends="clean,tests"/>


    <!-- SANDBOX -->

    <target name="buildsandbox" description="Compile the sandbox source tree java files into class files">

        <mkdir dir="${target.sandbox-classes.dir}"/>
        <mkdir dir="${target.sandbox-classes.dir}/META-INF"/>

        <javac destdir="${target.sandbox-classes.dir}" source="1.5" target="1.5" debug="${debug}"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${sandbox.src.dir}"/>
            <classpath refid="all-libs"/>
        </javac>

        <copy todir="${target.sandbox-classes.dir}" preservelastmodified="true">
            <fileset dir="${main.src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.handlers"/>
                <include name="**/*.schemas"/>
                <include name="**/*.xml"/>
                <include name="**/*.dtd"/>
                <include name="**/*.xsd"/>
                <include name="**/*.groovy"/>
            </fileset>
        </copy>

    </target>

    <target name="sandboxjar" description="Create full sandbox JAR file with all OpenSpaces classes"
            depends="buildsandbox">

        <mkdir dir="${lib.dir}/${name}"/>
        <delete file="${lib.dir}/${name}/${name}-sandbox.jar"/>

        <jar jarfile="${lib.dir}/${name}/${name}-sandbox.jar">
            <fileset dir="${target.sandbox-classes.dir}">
                <include name="META-INF/**"/>
                <include name="org/openspaces/**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
            </manifest>
        </jar>

    </target>

    <target name="agentjar" description="Create agent JAR file with all OpenSpaces classes" depends="buildsandbox">

        <mkdir dir="${lib.dir}/${name}"/>
        <delete file="${lib.dir}/${name}/${name}-agent.jar"/>

        <jar jarfile="${lib.dir}/${name}/${name}-agent.jar">
            <fileset dir="${target.sandbox-classes.dir}">
                <include name="org/openspaces/enhancer/**"/>
                <include name="org/openspaces/libraries/asm/**"/>
            </fileset>
            <manifest>
                <attribute name="Implementation-Title" value="${openspaces-title}"/>
                <attribute name="Implementation-Version" value="${openspaces-version}"/>
                <attribute name="OpenSpaces-Version" value="${openspaces-version}"/>
                <attribute name="Premain-Class" value="org.openspaces.enhancer.EnhancerAgent"/>
            </manifest>
        </jar>

    </target>


</project>